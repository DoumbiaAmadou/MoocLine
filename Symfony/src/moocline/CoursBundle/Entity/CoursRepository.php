<?php

namespace moocline\CoursBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * CoursRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CoursRepository extends EntityRepository
{
   public function findOneByIdJoinedToCategory($id)
    {
        $query = $this->getEntityManager()
            ->createQuery('
                SELECT c, FROM mooclineCoursBundle:Cours c
                WHERE c.user.id = :id'
            )->setParameter('id', $id);

        try {
            return $query->getSingleResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        } 
    }
    /**
     * Get the paginated list of published articles
     *
     * @param int $page
     * @param int $maxperpage
     * @param string $sortby
     * @return Paginator
     */
   
     public function getList($page=1, $maxperpage=2)
    {
        $q = $this->_em->createQueryBuilder()
            ->select('cours')
            ->from('mooclineCoursBundle:Cours','cours')
        ;
 
        $q->setFirstResult(($page-1) * $maxperpage)
            ->setMaxResults($maxperpage);
 
        return new Paginator($q);
    }
    
    public function getTotal()
    
        
    {
        $qb = $this->createQueryBuilder('a')
                   ->select('COUNT(a)');     // On sélectionne simplement COUNT(a)
 
        return (int) $qb->getQuery()
                         ->getSingleScalarResult(); // Utilisation de getSingleScalarResult pour avoir directement le résultat du COUNT
    }
    
}

